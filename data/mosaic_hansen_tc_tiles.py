from geosoup import MultiRaster, Vector, Handler, Raster, Opt
from sys import argv

"""
Script to mosaic tiles based on wheteher they intersect a specific boundary
Here the boundary used is boundary of Alaska and Canada. 
"""

if __name__ == '__main__':

    script, file_folder, out_file = argv

    Opt.cprint(file_folder)
    Opt.cprint('Outfile: {}'.format(out_file))

    bound_coords = [[-169.15996093750002, 59.81428022698168], [-166.34746093750002, 58.918656670521514],
                    [-164.06230468750002, 57.671671035154304], [-166.96269531250002, 55.74238728768902],
                    [-171.97246093750002, 55.09389730946914], [-171.62089843750002, 51.74383216286852],
                    [-166.52324218750002, 52.3921609944055], [-153.86699218750002, 55.29456733056491],
                    [-150.17558593750002, 58.09222100336203], [-144.90214843750002, 59.503499039497434],
                    [-141.38652343750002, 59.279744845369336], [-137.51933593750002, 57.95258384916048],
                    [-133.30058593750002, 52.6595247589874], [-129.96074218750002, 49.45719776213093],
                    [-125.7419921875, 47.29763431423617], [-119.5017578125, 48.12554644388249],
                    [-113.7009765625, 48.066845889196145], [-106.3181640625, 48.066845889196145],
                    [-98.5837890625, 47.8903420148682], [-91.90410156250002, 47.11851225665645],
                    [-86.80644531250002, 46.81863082379309], [-83.29082031250002, 44.60978736008787],
                    [-84.34550781250002, 41.26517132419739], [-80.30253906250002, 41.66035345299038],
                    [-77.13847656250002, 42.960199948729866], [-73.97441406250002, 44.3589686591478],
                    [-70.63457031250002, 44.3589686591478], [-68.87675781250002, 45.66373462232505],
                    [-66.94316406250002, 43.088706965961116], [-62.19707031250001, 43.088706965961116],
                    [-56.22050781250001, 43.85409660151231], [-50.06816406250001, 44.3589686591478],
                    [-51.82597656250001, 48.824730809629756], [-54.11113281250001, 53.13668636242484],
                    [-56.92363281250001, 54.79099337232696], [-59.64824218750001, 56.86380728954889],
                    [-62.10917968750001, 58.918656670521514], [-63.60332031250001, 60.68646587483211],
                    [-63.80107421875001, 60.900898697772135], [-64.35039062500002, 61.1138992429737],
                    [-69.88750000000002, 61.910356471023945], [-73.84257812500002, 62.967557980145465],
                    [-77.35820312500002, 63.91066619210739], [-79.37968750000002, 65.04651031522775],
                    [-78.76445312500002, 67.24855755395396], [-80.78593750000002, 69.57469743952159],
                    [-84.12578125000002, 69.99981753173893], [-87.81718750000002, 69.75794127868839],
                    [-90.10234375000002, 69.99981753173893], [-95.02421875, 69.26575776636543],
                    [-95.287890625, 68.5702995878685], [-97.13359375, 68.5702995878685],
                    [-101.440234375, 68.37680225566801], [-106.537890625, 69.01539454813513],
                    [-113.30546875, 68.05060589346397], [-114.8875, 69.01539454813513],
                    [-125.25859375, 70.85357417781019], [-130.79570312500002, 70.41644456151228],
                    [-144.68242187500002, 70.76690594146278], [-159.62382812500002, 71.58910348583488],
                    [-166.21562500000002, 69.63595450924004], [-168.67656250000002, 66.48903497336569],
                    [-167.44609375000002, 64.48448450226549], [-166.39140625000002, 61.61929667771038]]

    initial_filelist = Handler(file_folder).find_all(pattern='.tif')

    bounds_geom = Vector.get_osgeo_geom(Vector.wkt_from_coords(bound_coords, geom_type='polygon'))
    bounds_geom.CloseRings()

    final_filelist = []

    for filename in initial_filelist:
        ras = Raster(filename)
        ras.initialize()
        ras_bound_coords = ras.get_bounds(xy_coordinates=True)
        ras_geom = Vector.get_osgeo_geom(Vector.wkt_from_coords(ras_bound_coords, geom_type='polygon'))

        if ras_geom.Intersects(bounds_geom):
            Opt.cprint(filename)
            final_filelist.append(filename)

    mras = MultiRaster(final_filelist)
    Opt.cprint(mras)

    mras.mosaic(add_overviews=True,
                outfile=out_file,
                nodata_values=None,
                compress='LZW',
                bigtiff='YES')
